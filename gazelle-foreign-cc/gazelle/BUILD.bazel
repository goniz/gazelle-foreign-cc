# gazelle-foreign-cc/gazelle/BUILD.bazel
load("@rules_go//go:def.bzl", "go_binary", "go_library")

# This library is for the config part, so language can depend on it
# without a circular dependency on the main gazelle plugin binary's package.
go_library(
    name = "config_lib",
    srcs = ["config.go"],
    importpath = "example.com/gazelle-foreign-cc/gazelle", # Shared import path for this package's files
    visibility = ["//language:__pkg__"],
    deps = [
        "@com_github_bazelbuild_bazel_gazelle//config",
        "@com_github_bazelbuild_bazel_gazelle//rule",
    ],
)

go_library(
    name = "gazelle_lib",
    srcs = [
        "generate.go",
        "plugin.go",
        "resolve.go",
        # config.go is in config_lib
    ],
    importpath = "example.com/gazelle-foreign-cc/gazelle",
    deps = [
        ":config_lib", # Depends on the local config_lib
        "//language",
        "@com_github_bazelbuild_bazel_gazelle//config",
        "@com_github_bazelbuild_bazel_gazelle//language",
        "@com_github_bazelbuild_bazel_gazelle//repo",
        "@com_github_bazelbuild_bazel_gazelle//resolve",
        "@com_github_bazelbuild_bazel_gazelle//rule",
    ],
)

go_binary(
    name = "gazelle-foreign-cc", # The binary Gazelle will execute
    embed = [":gazelle_lib"],
    visibility = ["//visibility:public"],
)
