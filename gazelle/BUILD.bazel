# gazelle-foreign-cc/gazelle/BUILD.bazel
load("@rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

# This library is for the config part, so language can depend on it
# without a circular dependency on the main gazelle plugin binary's package.
go_library(
    name = "config_lib",
    srcs = ["config.go"],
    importpath = "github.com/goniz/gazelle-foreign-cc/gazelle/config",
    visibility = ["//language:__pkg__"],
    deps = [
        "@gazelle//config",
        "@gazelle//rule",
    ],
)

go_library(
    name = "gazelle_lib",
    srcs = [
        "cmake_api.go",
        "generate.go",
        "plugin.go",
        "resolve.go",
        # config.go is in config_lib
    ],
    importpath = "github.com/goniz/gazelle-foreign-cc/gazelle",
    deps = [
        ":config_lib", # Depends on the local config_lib
        "//language",
        "@gazelle//config",
        "@gazelle//label",
        "@gazelle//language",
        "@gazelle//repo",
        "@gazelle//resolve",
        "@gazelle//rule",
    ],
)

go_binary(
    name = "gazelle-foreign-cc", # The binary Gazelle will execute
    srcs = ["main.go"],
    deps = [
        ":gazelle_lib",
    ],
    visibility = ["//visibility:public"],
)

go_test(
    name = "generate_test",
    srcs = [
        "generate_test.go",
        "cmake_api.go",
        "generate.go",
        "plugin.go",
        "resolve.go",
    ],
    data = ["//testdata:all"],
    deps = [
        ":config_lib",
        "//language",
        "@gazelle//config",
        "@gazelle//label",
        "@gazelle//language",
        "@gazelle//repo",
        "@gazelle//resolve",
        "@gazelle//rule",
        "@rules_go//go/tools/bazel:go_default_library",
    ],
)
