# gazelle:cmake_source @curl
# gazelle:cmake_define BUILD_CURL_EXE OFF
# gazelle:cmake_define BUILD_TESTING OFF
# gazelle:cmake_define CURL_DISABLE_LDAP ON
# gazelle:cmake_define CURL_DISABLE_LDAPS ON
# gazelle:cmake_define CURL_DISABLE_SSL ON

load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//visibility:public"])

# Placeholder libcurl target (manually added since CMake File API failed)
# In a complete implementation, this would be generated by gazelle from CMake
cc_library(
    name = "libcurl",
    hdrs = [
        "@curl//:include/curl/curl.h",
        "@curl//:include/curl/curlver.h", 
        "@curl//:include/curl/easy.h",
        "@curl//:include/curl/mprintf.h",
        "@curl//:include/curl/multi.h",
        "@curl//:include/curl/options.h",
        "@curl//:include/curl/stdcheaders.h",
        "@curl//:include/curl/system.h",
        "@curl//:include/curl/typecheck-gcc.h",
        "@curl//:include/curl/urlapi.h",
    ],
    includes = ["@curl//:include"],
    defines = [
        "CURL_DISABLE_SSL",
        "CURL_DISABLE_LDAP", 
        "CURL_DISABLE_LDAPS",
        "BUILDING_LIBCURL",
    ],
    # Note: This is a header-only placeholder for demonstration
    # A real implementation would include the compiled libcurl sources
)